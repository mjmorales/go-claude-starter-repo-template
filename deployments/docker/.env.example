# =============================================================================
# Docker Compose Environment Variables
# Copy this file to .env and update with your values
# =============================================================================

# -----------------------------------------------------------------------------
# General Configuration
# -----------------------------------------------------------------------------
ENVIRONMENT=development
LOG_LEVEL=info
LOG_FORMAT=json
TZ=UTC

# Version info (populated by CI/CD)
VERSION=dev
COMMIT=local
BUILD_TIME=

# Registry configuration
REGISTRY=docker.io/your-org

# -----------------------------------------------------------------------------
# PostgreSQL Configuration
# -----------------------------------------------------------------------------
POSTGRES_DB=monorepo
POSTGRES_USER=postgres
POSTGRES_PASSWORD=changeme-postgres-password
POSTGRES_PORT=5432

# PostgreSQL Performance (Production)
POSTGRES_MAX_CONNECTIONS=200
POSTGRES_SHARED_BUFFERS=256MB
POSTGRES_EFFECTIVE_CACHE_SIZE=1GB

# -----------------------------------------------------------------------------
# Redis Configuration
# -----------------------------------------------------------------------------
REDIS_PASSWORD=changeme-redis-password
REDIS_PORT=6379
REDIS_MAXMEMORY=256mb
REDIS_MAXMEMORY_POLICY=allkeys-lru
REDIS_APPENDONLY=yes
REDIS_APPENDFSYNC=everysec
REDIS_SAVE=900 1 300 10 60 10000
REDIS_LOGLEVEL=notice

# -----------------------------------------------------------------------------
# RabbitMQ Configuration
# -----------------------------------------------------------------------------
RABBITMQ_USER=rabbitmq
RABBITMQ_PASSWORD=changeme-rabbitmq-password
RABBITMQ_VHOST=/
RABBITMQ_PORT=5672
RABBITMQ_MANAGEMENT_PORT=15672
RABBITMQ_MEMORY_LIMIT=0.4
RABBITMQ_DISK_FREE_LIMIT=1GB

# -----------------------------------------------------------------------------
# Prometheus Configuration
# -----------------------------------------------------------------------------
PROMETHEUS_PORT=9090
PROMETHEUS_RETENTION=15d
PROMETHEUS_RETENTION_SIZE=10GB

# -----------------------------------------------------------------------------
# Grafana Configuration
# -----------------------------------------------------------------------------
GRAFANA_PORT=3000
GF_ADMIN_USER=admin
GF_ADMIN_PASSWORD=changeme-grafana-password
GF_ROOT_URL=http://localhost:3000
GF_PLUGINS=
GF_LOG_MODE=console
GF_LOG_LEVEL=info

# Grafana Database (Production)
GF_DATABASE_TYPE=postgres
GF_DATABASE_HOST=postgres:5432
GF_DATABASE_NAME=grafana
GF_DATABASE_USER=grafana
GF_DATABASE_PASSWORD=changeme-grafana-db-password

# -----------------------------------------------------------------------------
# Jaeger Configuration
# -----------------------------------------------------------------------------
JAEGER_UI_PORT=16686
JAEGER_COLLECTOR_PORT=14268
JAEGER_OTLP_GRPC_PORT=4317
JAEGER_OTLP_HTTP_PORT=4318
JAEGER_ZIPKIN_PORT=9411
JAEGER_STORAGE=memory

# Jaeger Elasticsearch (Production)
ELASTICSEARCH_URL=http://elasticsearch:9200
ELASTICSEARCH_USER=elastic
ELASTICSEARCH_PASSWORD=changeme-elastic-password

# -----------------------------------------------------------------------------
# Development Tools
# -----------------------------------------------------------------------------
MAILHOG_SMTP_PORT=1025
MAILHOG_UI_PORT=8025

ADMINER_PORT=8081
ADMINER_DESIGN=pepa-linha

PGADMIN_PORT=5050
PGADMIN_EMAIL=admin@example.com
PGADMIN_PASSWORD=changeme-pgadmin-password

REDIS_COMMANDER_PORT=8082
REDIS_COMMANDER_USER=admin
REDIS_COMMANDER_PASSWORD=changeme-redis-commander-password

SWAGGER_UI_PORT=8083

MINIO_PORT=9000
MINIO_CONSOLE_PORT=9001
MINIO_ROOT_USER=minioadmin
MINIO_ROOT_PASSWORD=changeme-minio-password

# -----------------------------------------------------------------------------
# Application Services
# -----------------------------------------------------------------------------

# API Gateway
API_GATEWAY_PORT=8080
API_GATEWAY_METRICS_PORT=9090
API_GATEWAY_DEBUG_PORT=2345

# User Service
USER_SERVICE_PORT=8081
USER_SERVICE_METRICS_PORT=9091
USER_SERVICE_GRPC_PORT=50051

# Worker Service
WORKER_SERVICE_PORT=8082
WORKER_SERVICE_METRICS_PORT=9092

# -----------------------------------------------------------------------------
# Application Configuration
# -----------------------------------------------------------------------------

# Database URLs
DATABASE_URL=postgres://postgres:changeme-postgres-password@postgres:5432/monorepo?sslmode=disable
TEST_DATABASE_URL=postgres://postgres:changeme-postgres-password@postgres:5432/monorepo_test?sslmode=disable

# Redis URL
REDIS_URL=redis://:changeme-redis-password@redis:6379/0

# RabbitMQ URL
RABBITMQ_URL=amqp://rabbitmq:changeme-rabbitmq-password@rabbitmq:5672/

# JWT Configuration
JWT_SECRET=changeme-jwt-secret-minimum-32-characters-long
JWT_EXPIRY=24h
REFRESH_TOKEN_EXPIRY=168h

# OAuth2 Configuration
OAUTH_CLIENT_ID=your-oauth-client-id
OAUTH_CLIENT_SECRET=changeme-oauth-client-secret
OAUTH_REDIRECT_URL=http://localhost:8080/auth/callback

# Email Configuration (using Mailhog in dev)
SMTP_HOST=mailhog
SMTP_PORT=1025
SMTP_USER=
SMTP_PASSWORD=
SMTP_FROM=noreply@example.com
SMTP_TLS_ENABLED=false

# Storage Configuration (using MinIO in dev)
S3_ENDPOINT=http://minio:9000
S3_ACCESS_KEY=minioadmin
S3_SECRET_KEY=changeme-minio-password
S3_BUCKET=uploads
S3_REGION=us-east-1
S3_USE_SSL=false

# External APIs
EXTERNAL_API_KEY=your-external-api-key
EXTERNAL_API_URL=https://api.example.com

# Feature Flags
FEATURE_NEW_UI=false
FEATURE_BETA_API=false
FEATURE_RATE_LIMITING=true

# Rate Limiting
RATE_LIMIT_REQUESTS_PER_MINUTE=60
RATE_LIMIT_BURST=10

# CORS Configuration
CORS_ALLOWED_ORIGINS=http://localhost:3000,http://localhost:8080
CORS_ALLOWED_METHODS=GET,POST,PUT,DELETE,OPTIONS
CORS_ALLOWED_HEADERS=Content-Type,Authorization
CORS_ALLOW_CREDENTIALS=true

# Security
BCRYPT_COST=10
SESSION_SECRET=changeme-session-secret-32-chars
CSRF_SECRET=changeme-csrf-secret-32-characters

# Monitoring
METRICS_ENABLED=true
TRACING_ENABLED=true
PROFILING_ENABLED=false

# -----------------------------------------------------------------------------
# Production Overrides (set these in production .env)
# -----------------------------------------------------------------------------
# NODE_ENV=production
# SSL_CERT_PATH=/etc/ssl/certs/cert.pem
# SSL_KEY_PATH=/etc/ssl/private/key.pem
# FORCE_SSL=true
# TRUST_PROXY=true